const i=()=>{const n=document.createElement("input");return n.hidden=!0,n.type="file",n.click(),new Promise(e=>{n.onchange=()=>{const{files:t}=n;(t==null?void 0:t.length)===1&&e(t[0])}})},l=n=>{const e=new FileReader;return e.readAsDataURL(n),new Promise(t=>{e.onload=()=>{t(e.result)}})},m=n=>{const e=document.createElement("canvas");e.hidden=!0,document.body.append(e);const t=new Image;return t.src=n,t.crossOrigin="anonymous",new Promise(o=>{t.onload=()=>{e.width=t.width,e.height=t.height;const a=e.getContext("2d");a==null||a.drawImage(t,0,0);const r=e.toDataURL();e.remove(),o(r)}})};function u(n,e){const t=n.split(","),o=t[0].match(/:(.*?);/),a=(o&&o.length>1?o[1]:e)||e,r=window.atob(t[1]),c=new ArrayBuffer(r.length),d=new Uint8Array(c);for(let s=0;s<r.length;s++)d[s]=r.charCodeAt(s);return new Blob([c],{type:a})}function w(n,e,t){const o=document.createElement("a");let a=n;typeof n=="string"?o.target="_blank":a=window.URL.createObjectURL(n),o.href=a,o.download=`${e}.${t}`,document.body.appendChild(o),o.click(),document.body.removeChild(o),typeof n!="string"&&window.URL.revokeObjectURL(a)}export{u as b,w as d,m as s,l as t,i as u};
